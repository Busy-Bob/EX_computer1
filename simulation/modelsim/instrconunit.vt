
`timescale 1 ps/ 1 ps
module instrconunit_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg BRANCH;
reg CLK;
reg JUMP;
reg RESET;
reg [7:0] imm;
// wires                                               
wire [7:0]  PC;

// assign statements (if any)                          
instrconunit i1 (
// port map - connection between master ports and signals/registers   
	.BRANCH(BRANCH),
	.CLK(CLK),
	.JUMP(JUMP),
	.PC(PC),
	.RESET(RESET),
	.imm(imm)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
   #0	CLK = 0; RESET = 1; BRANCH = 0; JUMP = 0; imm = 0;
	#50 JUMP = 1; imm = 8'h23;
	#40 JUMP = 0; BRANCH = 1;
	#40 BRANCH = 0;
	#400 RESET = 0;
// --> end                                             
//$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
   #20 CLK = ~CLK;                                                    
//@eachvec;                                              
// --> end                                             
end                                                    
endmodule

